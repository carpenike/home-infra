# Instructions: https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
---
- name: copy containerd config file
  copy:
    src: containerd/containerd.conf
    dest: '/etc/modules-load.d/containerd.conf'
    owner: root
    group: root
    mode: '0644'

- name: load overlay
  modprobe:
    name: overlay
    state: present

- name: load br_netfilter
  modprobe:
    name: br_netfilter
    state: present

# Set /proc/sys/net/bridge/bridge-nf-call-iptables to 1 by running
# sysctl net.bridge.bridge-nf-call-iptables=1 to pass bridged IPv4 traffic to iptablesâ€™ chains.
# This is a requirement for some CNI plugins to work.
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
# Setup required sysctl params, these persist across reboots.
- name: Update bridged IPv4 traffic to iptables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

- name: Update bridged IPv4 traffic to ip6tables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

# Required for containerd CRI prerequisites
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#prerequisites-1
- name: Update bridged IPv4 traffic forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

- name: 'debian : install containerd package'
  apt:
    name:
      - containerd
    state: present
    update_cache: yes
  when: ansible_os_family | lower == 'debian'

- name: 'archlinux : install containerd package'
  pacman:
    name:
      - containerd
    state: present
    update_cache: yes
  when: ansible_os_family | lower == 'archlinux'

- name: create containerd config directory
  become: true
  file:
    path: /etc/containerd/
    state: directory
    owner: root
    group: root
    mode: '0755'

# TODO: https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd-systemd
- name: configure containerd
  command:
    cmd: containerd config default > /etc/containerd/config.toml
    creates: /etc/containerd/config.toml
  notify: restart containerd

- name: start containerd
  systemd:
    name: containerd
    daemon_reload: yes
    state: started
    enabled: yes
