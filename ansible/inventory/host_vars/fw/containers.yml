---
# -----------------------
# Container configuration
# -----------------------

vyos_containers:
  networks:
    services:
      description:
      network: services

  containers:
    haproxy-k8s-api:
      image:
        repository: docker.io/library/haproxy
        tag: "2.4.7"
      networks:
        services:
          ipv4_hostid: 2
      volumes:
        config:
          source: "/config/haproxy/ha_proxy.cfg"
          destination: "/usr/local/etc/haproxy/haproxy.cfg"

    udp-broadcast-relay-sonos:
      image:
        repository: ghcr.io/k8s-at-home/udp-broadcast-relay-redux
        tag: v1.25.0
      allow-host-networks: true
      cap-add:
        - net-admin
      env:
        SEPARATOR: ";"
        CFG_ID: "1"
        CFG_PORT: "1900"
        CFG_DEV: |-
          {{-
            [
              vyos_interfaces_enriched['wireless']['interface_complete'],
              vyos_interfaces_enriched['wired']['interface_complete'],
              vyos_interfaces_enriched['iot']['interface_complete']
            ] | join(";")
          -}}
        CFG_MULTICAST: "239.255.255.250"

    # udp-broadcast-relay-hdhr:
    #   image:
    #     repository: ghcr.io/k8s-at-home/udp-broadcast-relay-redux
    #     tag: v1.25.0
    #   allow-host-networks: true
    #   cap-add:
    #     - net-admin
    #   env:
    #     SEPARATOR: ";"
    #     CFG_ID: "1"
    #     CFG_PORT: "65001"
    #     CFG_DEV: |-
    #       {{-
    #         [
    #           vyos_interfaces_enriched['wireless']['interface_complete'],
    #           vyos_interfaces_enriched['wired']['interface_complete'],
    #           vyos_interfaces_enriched['iot']['interface_complete']
    #         ] | join(";")
    #       -}}
    #     CFG_MULTICAST: "239.255.255.250"

    # udp-broadcast-relay-mdns:
    #   image:
    #     repository: ghcr.io/k8s-at-home/udp-broadcast-relay-redux
    #     tag: v1.25.0
    #   allow-host-networks: true
    #   cap-add:
    #     - net-admin
    #   env:
    #     SEPARATOR: ";"
    #     CFG_ID: "1"
    #     CFG_PORT: "5353"
    #     CFG_DEV: |-
    #       {{-
    #         [
    #           vyos_interfaces_enriched['wireless']['interface_complete'],
    #           vyos_interfaces_enriched['wired']['interface_complete'],
    #           vyos_interfaces_enriched['iot']['interface_complete'],
    #           vyos_interfaces_enriched['servers']['interface_complete']
    #         ] | join(";")
    #       -}}
    #     CFG_MULTICAST: "224.0.0.251"

    # udp-broadcast-relay-flex:
    #   image:
    #     repository: ghcr.io/k8s-at-home/udp-broadcast-relay-redux
    #     tag: v1.25.0
    #   allow-host-networks: true
    #   cap-add:
    #     - net-admin
    #   env:
    #     SEPARATOR: ";"
    #     CFG_ID: "1"
    #     CFG_PORT: "4992"
    #     CFG_DEV: |-
    #       {{-
    #         [
    #           vyos_interfaces_enriched['wired']['interface_complete'],
    #           vyos_interfaces_enriched['wireless']['interface_complete'],
    #           vyos_interfaces_enriched['servers']['interface_complete']
    #         ] | join(";")
    #       -}}

    # udp-lifx-broadcast:
    #   image:
    #     repository: ghcr.io/k8s-at-home/udp-broadcast-relay-redux
    #     tag: v1.25.0
    #   allow-host-networks: true
    #   cap-add:
    #     - net-admin
    #   env:
    #     SEPARATOR: ";"
    #     CFG_ID: "1"
    #     CFG_PORT: "56700"
    #     CFG_DEV: |-
    #       {{-
    #         [
    #           vyos_interfaces_enriched['iot']['interface_complete'],
    #           vyos_interfaces_enriched['servers']['interface_complete']
    #         ] | join(";")
    #       -}}

    vector-agent:
      image:
        repository: docker.io/timberio/vector
        tag: 0.19.0-debian
      networks:
        services:
          ipv4_hostid: 4
      env:
        VECTOR_CONFIG: "/etc/vector/vector.yaml"
        VECTOR_WATCH_CONFIG: "true"
      volumes:
        config:
          source: "/config/vector-agent/vector.yaml"
          destination: "/etc/vector/vector.yaml"
        data:
          source: "/config/vector-agent/data"
          destination: "/var/lib/vector"
        logs:
          source: "/var/log"
          destination: "/var/log"
        geoip:
          source: "/config/geoip"
          destination: "/usr/share/GeoIP"

    vector-update-geoip:
      image:
        repository: docker.io/maxmindinc/geoipupdate
        tag: v4.8
      networks:
        services:
          ipv4_hostid: 5
      env:
        GEOIPUPDATE_ACCOUNT_ID: "{{ secure_values['maxmind']['account_id'] }}"
        GEOIPUPDATE_LICENSE_KEY: "{{ secure_values['maxmind']['license_key'] }}"
        GEOIPUPDATE_EDITION_IDS: GeoLite2-City
        GEOIPUPDATE_FREQUENCY: 24
      volumes:
        geoip:
          source: "/config/geoip"
          destination: "/usr/share/GeoIP"

    adguard-home:
      image:
        repository: ghcr.io/bjw-s/adguardhome
        tag: v0.107.3
      networks:
        services:
          ipv4_hostid: 6
      env:
        NO_ETC_HOSTS: "true"
      volumes:
        workdir:
          source: "/config/adguard-home/work"
          destination: "/opt/adguardhome/work"
        config:
          source: "/config/adguard-home/conf"
          destination: "/opt/adguardhome/conf"
